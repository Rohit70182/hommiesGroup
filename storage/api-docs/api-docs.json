{
    "openapi": "3.0.0",
    "info": {
        "title": "Hommies Group Api Documentation",
        "contact": {
            "name": "developer",
            "email": "rohit7305.rk@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://my-default-host.com",
            "description": "API Server"
        },
        {
            "url": "http://localhost/hommiesGroup/api",
            "description": "local server"
        },
        {
            "url": "https://hommiesgroup.com/api",
            "description": "Live server"
        }
    ],
    "paths": {
        "/amanity/amenities": {
            "get": {
                "tags": [
                    "amenities"
                ],
                "operationId": "getAmenities",
                "responses": {
                    "200": {
                        "description": "Amenity List",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "WiFi"
                                        },
                                        "image": {
                                            "type": "string",
                                            "example": "wifi.png"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No amenities found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/user/register": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "user register",
                "description": "user register",
                "operationId": "userRegister",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@mail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password2"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Validator Error"
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User register successfully"
                                        },
                                        "user": {
                                            "type": "string",
                                            "example": "User details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/user/register-provider": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Register a new provider",
                "description": "Register a new provider with additional details",
                "operationId": "registerProvider",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "confirm_password",
                                    "bio",
                                    "dob",
                                    "phone",
                                    "id_proof_1",
                                    "id_proof_2"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "provider@mail.com"
                                    },
                                    "dob": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "bio": {
                                        "type": "string",
                                        "example": "Experienced provider"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "confirm_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "id_proof_1": {
                                        "description": "Id proof to upload",
                                        "type": "file"
                                    },
                                    "id_proof_2": {
                                        "description": "Id proof to upload",
                                        "type": "file"
                                    },
                                    "profile_picture": {
                                        "description": "Profile file to upload",
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Validator Error"
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "provider register successfully"
                                        },
                                        "provider": {
                                            "type": "string",
                                            "example": "Provider details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/user/login": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "user login",
                "description": "user login",
                "operationId": "userLogin",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "device_token",
                                    "device_name",
                                    "device_type"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password2"
                                    },
                                    "email": {
                                        "type": "email",
                                        "format": "email",
                                        "example": "user1@mail.com"
                                    },
                                    "device_token": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "DVtoken"
                                    },
                                    "device_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "DVname"
                                    },
                                    "device_type": {
                                        "type": "integer",
                                        "format": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Validator Error"
                    },
                    "401": {
                        "description": "Authentication Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "login successfully"
                                        },
                                        "user": {
                                            "type": "string",
                                            "example": "User details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/user/check": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Check if the user is authenticated",
                "operationId": "userCheck",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "User Data!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Data not found!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/user/password/forgot": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "user forget password",
                "description": "user forget password",
                "operationId": "user_forget_password",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "email",
                                        "format": "email",
                                        "example": "rohit@gmail.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": "We have emailed you password reset link!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basicAuth": []
                    }
                ]
            }
        },
        "/user/profile/update": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": " user profile update",
                "description": "user profile update",
                "operationId": "userProfileUpdate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "profile_picture",
                                    "dob",
                                    "first_name",
                                    "last_name"
                                ],
                                "properties": {
                                    "profile_picture": {
                                        "description": "file to upload",
                                        "type": "file"
                                    },
                                    "phone_number": {
                                        "type": "numbrer",
                                        "example": "7018285882"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "arun"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "kumar"
                                    },
                                    "bio": {
                                        "type": "string",
                                        "example": "bio"
                                    },
                                    "country_code": {
                                        "type": "string",
                                        "example": "91"
                                    },
                                    "country": {
                                        "type": "number",
                                        "example": "india"
                                    },
                                    "dob": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1988-01-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": "Profile  Updated successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/user/change-password": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": " user change password",
                "description": "user change password",
                "operationId": "userChangePassword",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "old-password",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "old-password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret1234"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": "Password  Updated successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/user/logout": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "",
                "operationId": "userLogout",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": "User Data!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": "data Not Found!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/user/delete-account": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Delete User Account",
                "description": "Delete the authenticated user's account",
                "operationId": "deleteUserAccount",
                "responses": {
                    "200": {
                        "description": "Account deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Account deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete account"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/user/loadPage": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Load page data based on page parameter",
                "operationId": "loadPage",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Page data loaded successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Page",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No page found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/chats/send-message": {
            "post": {
                "tags": [
                    "chats"
                ],
                "summary": "chat with service provider and user",
                "operationId": "sendMessage",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "to_id",
                                    "property_id"
                                ],
                                "properties": {
                                    "to_id": {
                                        "type": "string",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "property_id": {
                                        "type": "string",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "message": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "message here"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Message sent successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Authentication error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not found error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/chats/load-chat": {
            "get": {
                "tags": [
                    "chats"
                ],
                "summary": "Load chat messages with read status update",
                "operationId": "loadChat",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination (default is 1)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Chats loaded successfully"
                                        },
                                        "list": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No chats found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/chats/chat-list": {
            "get": {
                "tags": [
                    "chats"
                ],
                "summary": "",
                "operationId": "chatList",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Chat list fetched"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Authentication error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Not found error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/chats/load-new-messages": {
            "get": {
                "tags": [
                    "chats"
                ],
                "summary": "Check for new messages for the authenticated user",
                "operationId": "loadNewMessages",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "new_messages": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "from_id": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "to_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "example": "Hello!"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Authentication error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/property/list": {
            "get": {
                "tags": [
                    "property"
                ],
                "operationId": "properties",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search properties by title or description",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Property One"
                        }
                    },
                    {
                        "name": "min_price",
                        "in": "query",
                        "description": "Minimum price of property",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 100
                        }
                    },
                    {
                        "name": "max_price",
                        "in": "query",
                        "description": "Maximum price of property",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 500
                        }
                    },
                    {
                        "name": "property_type",
                        "in": "query",
                        "description": "Property type",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "no_of_rooms",
                        "in": "query",
                        "description": "Number of Rooms",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    },
                    {
                        "name": "bathroom",
                        "in": "query",
                        "description": "Number of bathrooms",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    },
                    {
                        "name": "beds",
                        "in": "query",
                        "description": "Number of beds",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 4
                        }
                    },
                    {
                        "name": "adults",
                        "in": "query",
                        "description": "Number of adults",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    },
                    {
                        "name": "children",
                        "in": "query",
                        "description": "Number of children",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "infants",
                        "in": "query",
                        "description": "Number of infants",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "property_amenity",
                        "in": "query",
                        "description": "Property amenities (comma-separated values)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "1,2"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Property List",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Property One"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/property/listByRating": {
            "get": {
                "tags": [
                    "property"
                ],
                "operationId": "listByRating",
                "responses": {
                    "200": {
                        "description": "Property List by Rating",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Property One"
                                        },
                                        "rating": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 4.5
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/property/nearby": {
            "get": {
                "tags": [
                    "property"
                ],
                "operationId": "nearbyProperties",
                "parameters": [
                    {
                        "name": "latitude",
                        "in": "query",
                        "description": "Latitude of the user's location",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": 30.7046
                        }
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "Longitude of the user's location",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "example": -76.7179
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination (default is 1)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nearby Property List",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Property One"
                                        },
                                        "distance": {
                                            "type": "string",
                                            "example": "2.5 miles"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/property/properties": {
            "post": {
                "tags": [
                    "property"
                ],
                "summary": "Add a new property",
                "description": "Register a new property with additional details",
                "operationId": "addProperty",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "no_of_rooms",
                                    "no_of_beds",
                                    "price",
                                    "price_type",
                                    "address",
                                    "latitude",
                                    "longitude",
                                    "bathrooms",
                                    "property_type",
                                    "adult",
                                    "children",
                                    "infants",
                                    "property_id_proof_1",
                                    "property_id_proof_2"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Beautiful House"
                                    },
                                    "no_of_rooms": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "no_of_beds": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "about": {
                                        "type": "string",
                                        "example": "A cozy place for vacation."
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 150.75
                                    },
                                    "price_type": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "town": {
                                        "type": "string",
                                        "example": "canada"
                                    },
                                    "zipcode": {
                                        "type": "integer",
                                        "example": 178526
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "Canada"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St, Springfield"
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 40.7128
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": -74.006
                                    },
                                    "bathrooms": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "property_type": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "adult": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "area": {
                                        "type": "string",
                                        "example": "873"
                                    },
                                    "children": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "infants": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "amenities_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "property_id_proof_1": {
                                        "description": "First property ID proof document",
                                        "type": "file"
                                    },
                                    "property_id_proof_2": {
                                        "description": "Second property ID proof document",
                                        "type": "file"
                                    },
                                    "images[]": {
                                        "description": "Multiple images to upload",
                                        "type": "array",
                                        "items": {
                                            "type": "file"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Property created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Property created successfully."
                                        },
                                        "property": {
                                            "type": "object",
                                            "example": {
                                                "id": 1,
                                                "name": "Beautiful House",
                                                "no_of_rooms": 3,
                                                "no_of_beds": 2,
                                                "price": 150.75,
                                                "address": "123 Main St, Springfield"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/property/getPropertyDetail/{id}": {
            "get": {
                "tags": [
                    "property"
                ],
                "summary": "Get Property Details",
                "description": "Retrieve details of a property by its ID",
                "operationId": "getPropertyDetail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the property",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Property details retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Beautiful House"
                                        },
                                        "no_of_rooms": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "no_of_beds": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "about": {
                                            "type": "string",
                                            "example": "A cozy place for vacation."
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 150.75
                                        },
                                        "address": {
                                            "type": "string",
                                            "example": "123 Main St, Springfield"
                                        },
                                        "latitude": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 40.7128
                                        },
                                        "longitude": {
                                            "type": "number",
                                            "format": "float",
                                            "example": -74.006
                                        },
                                        "bathrooms": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "property_type": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "adult": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "children": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "infants": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "property_id_proof_1": {
                                            "type": "string",
                                            "example": "proof1_20240807_123456.jpg"
                                        },
                                        "property_id_proof_2": {
                                            "type": "string",
                                            "example": "proof2_20240807_123457.jpg"
                                        },
                                        "amenities": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "Pool",
                                                "Wi-Fi",
                                                "Parking"
                                            ]
                                        },
                                        "images": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "image1.jpg",
                                                "image2.jpg"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Property not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Property not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/property/edit/{id}": {
            "post": {
                "tags": [
                    "property"
                ],
                "operationId": "updateProperty",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "no_of_rooms",
                                    "no_of_beds",
                                    "price",
                                    "price_type",
                                    "address",
                                    "latitude",
                                    "longitude",
                                    "bathrooms",
                                    "property_type",
                                    "adult",
                                    "children",
                                    "infants"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Property"
                                    },
                                    "no_of_rooms": {
                                        "type": "integer",
                                        "example": 4
                                    },
                                    "no_of_beds": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 200.5
                                    },
                                    "price_type": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "456 New Street, City"
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 41.8781
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": -87.6298
                                    },
                                    "bathrooms": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "property_type": {
                                        "type": "string",
                                        "example": "2"
                                    },
                                    "adult": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "area": {
                                        "type": "string",
                                        "example": "873 m"
                                    },
                                    "children": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "infants": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "town": {
                                        "type": "string",
                                        "example": "canada"
                                    },
                                    "zipcode": {
                                        "type": "integer",
                                        "example": 178526
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "Canada"
                                    },
                                    "amenities_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2
                                        ]
                                    },
                                    "property_id_proof_1": {
                                        "description": "Updated first property ID proof",
                                        "type": "file"
                                    },
                                    "property_id_proof_2": {
                                        "description": "Updated second property ID proof",
                                        "type": "file"
                                    },
                                    "images[]": {
                                        "description": "New images to upload or update",
                                        "type": "array",
                                        "items": {
                                            "type": "file"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Property updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Property updated successfully."
                                        },
                                        "property": {
                                            "type": "object",
                                            "example": {
                                                "id": 1,
                                                "name": "Updated Property",
                                                "no_of_rooms": 4,
                                                "no_of_beds": 3,
                                                "price": 200.5,
                                                "address": "456 New Street, City"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Property not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Property not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/property/myFavourites": {
            "get": {
                "tags": [
                    "property"
                ],
                "summary": "Get a list of favourite items for the authenticated user",
                "description": "Returns a list of active favourite items for the authenticated user.",
                "operationId": "myFavourites",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "No favourite items found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No providers are in your favourites"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/property/markfavourite": {
            "post": {
                "tags": [
                    "property"
                ],
                "summary": "Mark Favorite property",
                "description": "Register a new property with additional details",
                "operationId": "markfavourite",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "property_id"
                                ],
                                "properties": {
                                    "property_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Property favorite and unfavorite successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Property favorite and unfavorite successfully."
                                        },
                                        "property": {
                                            "type": "object",
                                            "example": {
                                                "id": 1,
                                                "name": "Beautiful House",
                                                "no_of_rooms": 3,
                                                "no_of_beds": 2,
                                                "price": 150.75,
                                                "address": "123 Main St, Springfield"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/property/deleteProperty": {
            "post": {
                "tags": [
                    "property"
                ],
                "summary": "Delete a property",
                "description": "Delete a property with all associated data",
                "operationId": "deleteProperty",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "property_id"
                                ],
                                "properties": {
                                    "property_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Property deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Property deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Property not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Property not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to delete property.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized to delete property."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/property/storePropertyHistory": {
            "post": {
                "tags": [
                    "property"
                ],
                "summary": "Store property history for the given property and user",
                "description": "Stores a record in the property history table with the given to_user, property_id, and message.",
                "operationId": "storePropertyHistory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "property_id"
                                ],
                                "properties": {
                                    "to_user": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "property_id": {
                                        "type": "integer",
                                        "example": 101
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "Property sold to this user."
                                    },
                                    "sold_outside": {
                                        "type": "integer",
                                        "example": 0
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Property history saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Property history saved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input data."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/property/markAsUnsold": {
            "post": {
                "tags": [
                    "property"
                ],
                "summary": "Mark a property as unsold",
                "description": "Marks a property as unsold by updating its state_id and removing the sold_to information.",
                "operationId": "markAsUnsold",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "property_id"
                                ],
                                "properties": {
                                    "property_id": {
                                        "type": "integer",
                                        "example": 101
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Property marked as unsold successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Property marked as unsold successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Property not found or is not in sold state",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Property not found or is not sold."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/property/user-list": {
            "get": {
                "tags": [
                    "property"
                ],
                "summary": "Fetch users associated with a property based on property_id",
                "description": "Fetches a list of users involved in chats associated with a given property and filtered by role.",
                "operationId": "getUserList",
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "query",
                        "description": "The ID of the property to filter users by",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 101
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "John Doe"
                                            },
                                            "email": {
                                                "type": "string",
                                                "example": "john.doe@example.com"
                                            },
                                            "phone": {
                                                "type": "string",
                                                "example": "123456789"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "example": "2022-01-01T00:00:00.000000Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid property_id."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Property not found or no associated users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No users found for this property."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/rating/storeRating": {
            "post": {
                "tags": [
                    "rating"
                ],
                "summary": "Store a new rating.",
                "operationId": "storeRating",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "property_id",
                                    "rating"
                                ],
                                "properties": {
                                    "property_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "rating": {
                                        "type": "integer",
                                        "example": 4
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Great Property!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rating stored successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Rating saved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Something went wrong."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/roommate/findRoommate": {
            "post": {
                "tags": [
                    "roommate"
                ],
                "summary": "Find a roommate based on preferences",
                "description": "This API allows users to submit their preferences for finding a roommate based on various factors like sleep schedule, lifestyle habits, and more.",
                "operationId": "findRoommate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "sleep_schedule",
                                    "property_id",
                                    "lifestyle_habits",
                                    "social_preferences",
                                    "pet_friendly",
                                    "study_habits",
                                    "cooking_kitchen_usage"
                                ],
                                "properties": {
                                    "property_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "sleep_schedule": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "lifestyle_habits": {
                                        "type": "string",
                                        "example": "1,2,3"
                                    },
                                    "social_preferences": {
                                        "type": "string",
                                        "example": "1,2"
                                    },
                                    "pet_friendly": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "study_habits": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "cooking_kitchen_usage": {
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Roommate preferences saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Roommate preferences saved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input data."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/roommate/roommate-list": {
            "get": {
                "tags": [
                    "roommate"
                ],
                "operationId": "roommateList",
                "responses": {
                    "200": {
                        "description": "Property List by Rating",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Property One"
                                        },
                                        "rating": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 4.5
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/roommate/updateRoommate/{id}": {
            "post": {
                "tags": [
                    "roommate"
                ],
                "summary": "Update roommate preferences",
                "description": "This API allows users to update their roommate preferences.",
                "operationId": "updateRoommate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Roommate Preference ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "sleep_schedule",
                                    "property_id",
                                    "lifestyle_habits",
                                    "social_preferences",
                                    "pet_friendly",
                                    "study_habits",
                                    "cooking_kitchen_usage"
                                ],
                                "properties": {
                                    "property_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "sleep_schedule": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "lifestyle_habits": {
                                        "type": "string",
                                        "example": "1,2,3"
                                    },
                                    "social_preferences": {
                                        "type": "string",
                                        "example": "1,2"
                                    },
                                    "pet_friendly": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "study_habits": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "cooking_kitchen_usage": {
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Roommate preferences updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Roommate preferences updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or roommate preference not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input data or Roommate Preference not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized action",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized. Only users can update this."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/roommate/markAsSold": {
            "post": {
                "tags": [
                    "roommate"
                ],
                "summary": "Mark roommate preference as sold",
                "description": "This API allows users to mark a roommate preference as sold based on roommate_reference_id and user_id.",
                "operationId": "markAsSold",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "roommate_reference_id",
                                    "user_id"
                                ],
                                "properties": {
                                    "roommate_reference_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Roommate preference marked as sold successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Roommate preference marked as sold successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or data not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input or roommate preference not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "amenities",
            "description": "amenities"
        },
        {
            "name": "users",
            "description": "users"
        },
        {
            "name": "chats",
            "description": "chats"
        },
        {
            "name": "property",
            "description": "property"
        },
        {
            "name": "rating",
            "description": "rating"
        },
        {
            "name": "roommate",
            "description": "roommate"
        }
    ],
    "security": [
        {
            "sanctum": []
        }
    ]
}